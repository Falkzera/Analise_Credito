
import streamlit as st
import plotly.graph_objects as go
from utils.data_loader import load_business_metrics, generate_sample_portfolio
from utils.charts import create_portfolio_distribution, COLORS
from utils.calculations import format_currency, format_percentage


st.markdown('<h2 class="section-header">üìä Dashboard de Performance e Impacto</h2>', 
            unsafe_allow_html=True)

# Carregando dados
kpis = load_business_metrics()
portfolio = generate_sample_portfolio()

# KPIs principais em colunas
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.metric(
        label="üéØ AUC do Modelo",
        value=f"{kpis['auc_atual']:.4f}",
        delta="Alta Precis√£o",
        help="√Årea sob a curva ROC - Medida de qualidade do modelo"
    )

with col2:
    st.metric(
        label="üìà Melhoria na Detec√ß√£o", 
        value=f"+{kpis['melhoria_deteccao']}%",
        delta="vs. modelo anterior",
        help="Aumento no recall para identifica√ß√£o de inadimplentes"
    )

with col3:
    st.metric(
        label="üí∞ ROI Projetado (1¬∫ Ano)",
        value=f"{kpis['roi_projetado']}%",
        delta="Retorno garantido",
        help="Retorno sobre investimento projetado para o primeiro ano"
    )

with col4:
    st.metric(
        label="üìâ Redu√ß√£o de Inadimpl√™ncia",
        value=f"-{kpis['reducao_inadimplencia']}%",
        delta="Economia significativa",
        help="Redu√ß√£o estimada na taxa de inadimpl√™ncia"
    )

st.markdown("---")

# Se√ß√£o de an√°lise da carteira
col1, col2 = st.columns([1, 1])

with col1:
    st.markdown("### üìä Distribui√ß√£o de Risco da Carteira")
    fig_portfolio = create_portfolio_distribution(portfolio)
    st.plotly_chart(fig_portfolio, use_container_width=True)
    
    # Insights da distribui√ß√£o
    risk_counts = portfolio['risk_category'].value_counts()
    baixo_risco_pct = (risk_counts.get('Baixo Risco', 0) / len(portfolio)) * 100
    alto_risco_pct = (risk_counts.get('Alto Risco', 0) / len(portfolio)) * 100
    
    st.info(f"""
    **Insights da Carteira:**
    - {baixo_risco_pct:.1f}% dos clientes s√£o classificados como baixo risco
    - {alto_risco_pct:.1f}% requerem aten√ß√£o especial (alto risco)
    - Modelo permite segmenta√ß√£o precisa para estrat√©gias diferenciadas
    """)

with col2:
    st.markdown("### üöÄ Principais Benef√≠cios do Modelo")
    
    # Benef√≠cios em cards
    beneficios = [
        {
            "titulo": "Detec√ß√£o Superior",
            "valor": "64% melhor",
            "descricao": "Identifica√ß√£o de inadimplentes",
            "icone": "üéØ",
            "cor": COLORS['success']
        },
        {
            "titulo": "ROI Excepcional", 
            "valor": "740%",
            "descricao": "Retorno no primeiro ano",
            "icone": "üíé",
            "cor": COLORS['primary']
        },
        {
            "titulo": "Redu√ß√£o de Perdas",
            "valor": "25%",
            "descricao": "Menos inadimpl√™ncia",
            "icone": "üìâ",
            "cor": COLORS['warning']
        },
        {
            "titulo": "Precis√£o Elevada",
            "valor": "71.6%",
            "descricao": "AUC do modelo",
            "icone": "üî¨",
            "cor": COLORS['success']
        }
    ]
    
    for beneficio in beneficios:
        st.markdown(f"""
        <div class="metric-card">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <span style="font-size: 24px; margin-right: 10px;">{beneficio['icone']}</span>
                <span style="font-size: 18px; font-weight: bold; color: {beneficio['cor']};">
                    {beneficio['titulo']}
                </span>
            </div>
            <div style="font-size: 24px; font-weight: bold; color: {beneficio['cor']}; margin-bottom: 5px;">
                {beneficio['valor']}
            </div>
            <div style="color: #6B7280; font-size: 14px;">
                {beneficio['descricao']}
            </div>
        </div>
        """, unsafe_allow_html=True)

st.markdown("---")

# Se√ß√£o de compara√ß√£o de modelos
st.markdown("### üìà Compara√ß√£o de Performance")

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("#### Modelo Anterior")
    st.markdown(f"""
    - **AUC:** 0.6753
    - **Recall:** 22%
    - **Precision:** 12%
    - **Threshold:** 0.9799
    """)
    st.markdown('<span style="color: #EF4444;">‚ùå Performance Insuficiente</span>', 
                unsafe_allow_html=True)

with col2:
    st.markdown("#### ‚û°Ô∏è Melhoria")
    
    # Criando gr√°fico de seta de melhoria
    fig_improvement = go.Figure()
    
    fig_improvement.add_annotation(
        x=0.5, y=0.5,
        text="‚ÜóÔ∏è<br><b>+64%</b><br>Detec√ß√£o",
        showarrow=False,
        font=dict(size=20, color=COLORS['success']),
        bgcolor="rgba(16, 185, 129, 0.1)",
        bordercolor=COLORS['success'],
        borderwidth=2
    )
    
    fig_improvement.update_layout(
        xaxis=dict(visible=False),
        yaxis=dict(visible=False),
        height=150,
        margin=dict(l=0, r=0, t=0, b=0),
        showlegend=False,
        paper_bgcolor='rgba(0,0,0,0)',
        plot_bgcolor='rgba(0,0,0,0)'
    )
    
    st.plotly_chart(fig_improvement, use_container_width=True)

with col3:
    st.markdown("#### Modelo LightGBM + SMOTE")
    st.markdown(f"""
    - **AUC:** 0.7163
    - **Recall:** 36%
    - **Precision:** 8%
    - **Threshold:** 0.0922
    """)
    st.markdown('<span style="color: #10B981;">‚úÖ Performance Superior</span>', 
                unsafe_allow_html=True)

# Alertas e recomenda√ß√µes
st.markdown("---")
st.markdown("### üéØ Pr√≥ximos Passos Recomendados")

col1, col2 = st.columns(2)

with col1:
    st.success("""
    **Implementa√ß√£o Imediata:**
    - Modelo pronto para produ√ß√£o
    - Integra√ß√£o com sistemas existentes
    - Treinamento das equipes
    """)

with col2:
    st.warning("""
    **Monitoramento Cont√≠nuo:**
    - Acompanhar performance em produ√ß√£o
    - Retreinamento mensal
    - Ajustes conforme necess√°rio
    """)

# Informa√ß√µes adicionais
with st.expander("üìã Detalhes T√©cnicos do Modelo"):
    st.markdown("""
    **Especifica√ß√µes T√©cnicas:**
    - **Algoritmo:** LightGBM com SMOTE para balanceamento
    - **Dataset:** 20.000 registros com 54 features
    - **Divis√£o:** 80/20 (treino/teste)
    - **Valida√ß√£o:** Matriz de confus√£o e curva ROC
    - **Threshold Otimizado:** 0.0922 para m√°xima detec√ß√£o
    
    **Principais Vari√°veis:**
    1. Score de risco externo (riskassesment_940T)
    2. Hist√≥rico de pagamentos √∫ltimos 12 meses
    3. Padr√£o de atrasos √∫ltimos 24 meses
    4. Renda principal mensal
    5. Valor da anuidade mensal
    """)

from utils.assets import custom_assets
custom_assets()

from utils.developer import rodape_desenvolvedor
rodape_desenvolvedor()